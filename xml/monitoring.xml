<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<chapter xml:id="cha-monitoring" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Monitoring and logging</title>
 <info>
  <abstract>
   <para>
    Obtaining and maintaining an overview over the status and health
    of a cluster's compute nodes helps to ensure a smooth operation.
    This chapter describes tools that give an administrator an
    overview of the current cluster status, collect system
    logs, and gather information on certain system failure conditions.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
  <sect1 xml:id="sec-remote-conman">
  <title>ConMan &mdash; the console manager</title>
  <para>
   ConMan is a serial console management program designed to support many
   console devices and simultaneous users. It supports:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     local serial devices
    </para>
   </listitem>
   <listitem>
    <para>
     remote terminal servers (via the telnet protocol)
    </para>
   </listitem>
   <listitem>
    <para>
     IPMI Serial-Over-LAN (via FreeIPMI)
    </para>
   </listitem>
   <listitem>
    <para>
     Unix domain sockets
    </para>
   </listitem>
   <listitem>
    <para>
     external processes (for example, using <command>expect</command> scripts
     for <command>telnet</command>, <command>ssh</command>, or
     <command>ipmi-sol</command> connections)
    </para>
   </listitem>
  </itemizedlist>
  <para>
   ConMan can be used for monitoring, logging, and optionally timestamping
   console device output.
  </para>
  <para>
   To install ConMan, run <command>zypper in conman</command>.
  </para>
  <important>
   <title><systemitem class="daemon">conmand</systemitem> sends unencrypted data</title>
   <para>
    The daemon <systemitem class="daemon">conmand</systemitem> sends
    unencrypted data over the
    network and its connections are not authenticated. Therefore, it should
    be used locally only, listening to the port
    <literal>localhost</literal>. However, the IPMI console does offer
    encryption. This makes <literal>conman</literal> a good tool for
    monitoring many such consoles.
   </para>
  </important>
  <para>
   ConMan provides expect-scripts in the
   directory <filename>/usr/lib/conman/exec</filename>.
  </para>
  <para>
   Input to <literal>conman</literal> is not echoed in interactive mode.
   This can be changed by entering the escape sequence
   <literal>&amp;E</literal>.
  </para>
  <para>
   When pressing <keycap function="enter"/> in interactive mode, no line
   feed is generated. To generate a line feed, press
   <keycombo><keycap function="control"/><keycap>L</keycap></keycombo>.
  </para>
  <para>
   For more information about options, see the ConMan man page.
  </para>
 </sect1>
 <sect1 xml:id="sec-monitoring-ganglia">
  <title>Ganglia &mdash; system monitoring</title>
  <para>
   Ganglia is a scalable, distributed monitoring system for high-performance
   computing systems, such as clusters and grids. It is based on a
   hierarchical design targeted at federations of clusters.
  </para>
  <sect2 xml:id="sec-using-ganglia">
   <title>Using Ganglia</title>
   <!-- trichardson, 2021-08-26: This and ganglia-web should be procedures,
    but Ganglia (and therefore this section) will eventually be removed in
    favour of Grafana (https://jira.suse.com/browse/PM-2566) -->
   <para>
    To use Ganglia, install <package>ganglia-gmetad</package>
    on the management server, then start the Ganglia meta-daemon:
    <command>rcgmead start</command>. To make sure the service is started
    after a reboot, run: <command>systemctl enable gmetad</command>. On
    each cluster node which you want to monitor, install
    <package>ganglia-gmond</package>, start the service <command>rcgmond
    start</command> and make sure it is enabled to start automatically
    after a reboot: <command>systemctl enable gmond</command>. To test
    whether the <systemitem class="daemon">gmond</systemitem> daemon has
    connected to the
    meta-daemon, run <command>gstat -a</command> and check that each node to
    be monitored is present in the output.
   </para>
  </sect2>
  <sect2 xml:id="sec-ganglia-btrfs">
   <title>Ganglia on Btrfs</title>
   <para>
    When using the Btrfs file system, the monitoring data will be lost after
    a rollback of the service <systemitem class="daemon">gmetad</systemitem>.
    To fix this issue, either install the package
    <package>ganglia-gmetad-skip-bcheck</package> or create the file
    <filename>/etc/ganglia/no_btrfs_check</filename>.
   </para>
  </sect2>
  <sect2 xml:id="sec-ganglia-web">
   <title>Using the Ganglia Web interface</title>
   <para>
    Install <package>ganglia-web</package> on the management server.
    Enable PHP in Apache2: <command>a2enmod php7</command>.
    Then start Apache2 on this machine: <command>rcapache2
    start</command> and make sure it is started automatically after a
    reboot: <command>systemctl enable apache2</command>. The Ganglia Web
    interface is accessible from
    <literal>http://<replaceable>MANAGEMENT_SERVER</replaceable>/ganglia</literal>.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-monitoring-ras">
  <title>rasdaemon &mdash; utility to log RAS error tracings</title>
  <para>
   <systemitem class="daemon">rasdaemon</systemitem> is an RAS
   (Reliability, Availability and Serviceability) logging tool. It records
   memory errors using EDAC (Error Detection and Correction) tracing events.
   EDAC drivers in the Linux kernel handle detection of ECC (Error Correction
   Code) errors from memory controllers.
  </para>
  <para>
   <systemitem class="daemon">rasdaemon</systemitem> can be used on large
   memory systems to track, record, and localize memory errors and how they
   evolve over time to detect hardware degradation. Furthermore, it can be used
   to localize a faulty DIMM on the mainboard.
  </para>
  <para>
   To check whether the EDAC drivers are loaded, run the following command:
  </para>
<screen>&prompt;ras-mc-ctl --status</screen>
  <para>
   The command should return <literal>ras-mc-ctl: drivers are
   loaded</literal>. If it indicates that the drivers are not loaded, EDAC
   may not be supported on your board.
  </para>
  <para>
   To start <systemitem class="daemon">rasdaemon</systemitem>, run
   <command>systemctl start rasdaemon.service</command>.
   To start <systemitem class="daemon">rasdaemon</systemitem>
   automatically at boot time, run <command>systemctl enable
   rasdaemon.service</command>. The daemon logs information to
   <filename>/var/log/messages</filename> and to an internal database. A
   summary of the stored errors can be obtained with the following command:
  </para>
<screen>&prompt;ras-mc-ctl --summary</screen>
  <para>
   The errors stored in the database can be viewed with:
  </para>
<screen>&prompt;ras-mc-ctl --errors</screen>
  <para>
   Optionally, you can load the DIMM labels silk-screened on the system
   board to more easily identify the faulty DIMM. To do so, before starting
   <systemitem class="daemon">rasdaemon</systemitem>, run:
  </para>
<screen>&prompt;systemctl start ras-mc-ctl start</screen>
  <para>
   For this to work, you need to set up a layout description for the board.
   There are no descriptions supplied by default. To add a layout
   description, create a file with an arbitrary name in the directory
   <filename>/etc/ras/dimm_labels.d/</filename>. The format is:
  </para>
<screen>Vendor: <replaceable>MOTHERBOARD-VENDOR-NAME</replaceable>
Model: <replaceable>MOTHERBOARD-MODEL-NAME</replaceable>
  <replaceable>LABEL</replaceable>: <replaceable>MC</replaceable>.<replaceable>TOP</replaceable>.<replaceable>MID</replaceable>.<replaceable>LOW</replaceable></screen>
  <!-- trichardson, 2021-08-26: this doesn't look quite right? investigate -->
 </sect1>
</chapter>
