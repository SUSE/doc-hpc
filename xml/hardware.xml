<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<chapter xml:id="cha-nodes" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Hardware</title>
 <info>
  <abstract>
   <para>
    Here tools are described which may be used to obtain information
    about the hardware infrastucture of components of interest for HPC
    applications.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec-nodes-cpuid">
  <title>cpuid</title>
  <para>
   <literal>cpuid</literal> executes the x86 CPUID instruction and decodes
   and prints the results to stdout. Its knowledge of Intel, AMD and Cyrix
   CPUs is fairly complete. It specifically targets the Intel Xeon Phi
   architecture.
  </para>
  <para>
   To install <command>cpuid</command>, run: <literal>zypper in cpuid</literal>.
  </para>
  <para>
   For information about runtime options for <command>cpuid</command>, see the
   man page <literal>cpuid(1)</literal>.
  </para>
  <para>
   Note that this tool is only available for x86-64.
  </para>
 </sect1>
 <sect1 xml:id="sec-nodes-hwloc">
  <title>hwloc &mdash; portable abstraction of hierarchical architectures for high-performance computing</title>
  <para>
   <literal>hwloc</literal> provides CLI tools and a C API to
   obtain the hierarchical map of key computing elements, such as NUMA
   memory nodes, shared caches, processor packages, processor cores,
   processing units (logical processors or <quote>threads</quote>) and even I/O
   devices. <literal>hwloc</literal> also gathers various attributes such as
   cache and memory information, and is portable across a variety of different
   operating systems and platforms. Additionally it can assemble the
   topologies of multiple machines into a single one, to let applications
   consult the topology of an entire fabric or cluster at once.
  </para>
  <!-- "consult" above sounds like the wrong word. - sknorr, 2020-12-16 -->
  
  <para>
   <emphasis>lstopo</emphasis> allows the user to obtain the topology
   of a machine or convert topology information obtained on a remote
   machine into one of several output formats. In graphical mode (X11),
   it displays the topology in a window, several other output formats
   are available as well , including plain text, PDF, PNG, SVG and FIG.
   For more information, see the man pages provided by
   <literal>hwloc</literal> and <literal>lstopo</literal>.
  </para>
  <para>
   It also features full support for import and export of XML-formatted
   topology files via the <literal>libxml2</literal> library.
  </para>
  <para>
   The package <literal>hwloc-devel</literal> offers a library that can be
   directly included into external programs. This requires that the
   <literal>libxml2</literal> development library (package
   <literal>libxml2-devel</literal>) is available when compiling
   <literal>hwloc</literal>.
   </para>
 </sect1>
</chapter>
